/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinStaking,
  DarwinStakingInterface,
} from "../../contracts/DarwinStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedDarwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_evotures",
        type: "address",
      },
      {
        internalType: "address",
        name: "_multiplier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "StakeEvoture",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
    ],
    name: "WithdrawEvoture",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_BONUS_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evotures",
    outputs: [
      {
        internalType: "contract IMultiplierNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastClaimTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct IDarwinStaking.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplier",
    outputs: [
      {
        internalType: "contract IMultiplierNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_lootBox",
        type: "bool",
      },
    ],
    name: "stakeEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedDarwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastClaimTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200114738038062001147833981016040819052610031916100a5565b6001600081905580546001600160a01b039586166001600160a01b03199182161790915560028054948616948216949094179093556003805492851692841692909217909155600480549190931691161790556100f9565b80516001600160a01b03811681146100a057600080fd5b919050565b600080600080608085870312156100bb57600080fd5b6100c485610089565b93506100d260208601610089565b92506100e060408601610089565b91506100ee60608601610089565b905092959194509250565b61103e80620001096000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634233531e1161008c5780638192b51e116100665780638192b51e146102705780638ce910a514610283578063e4fd18c914610296578063f65e0dfd146102a557600080fd5b80634233531e146102045780636386c1c7146102175780637b0472f01461025d57600080fd5b8063252ab12d116100c8578063252ab12d146101ac5780632bc07e32146101bf5780632e1a7d4d146101dc5780633110c792146101f157600080fd5b8063150b7a02146100ef5780631959a0021461012c5780631b3ed72214610181575b600080fd5b61010e6100fd366004610df3565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61016161013a366004610e92565b60056020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610123565b600454610194906001600160a01b031681565b6040516001600160a01b039091168152602001610123565b600354610194906001600160a01b031681565b6101ce671bc16d674ec8000081565b604051908152602001610123565b6101ef6101ea366004610eb6565b6102ad565b005b600154610194906001600160a01b031681565b600254610194906001600160a01b031681565b61022a610225366004610e92565b61055d565b60405161012391908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6101ef61026b366004610ecf565b6105d6565b6101ef61027e366004610eff565b6107b0565b6101ce610291366004610e92565b61096d565b6101ce674563918244f4000081565b6101ef610b0e565b6102b5610cf8565b60006102bf610d51565b9050811561052057336000908152600560205260409020600101544210156103265760405162461bcd60e51b815260206004820152601560248201527411185c9dda5b94dd185ada5b99ce881313d0d2d151605a1b60448201526064015b60405180910390fd5b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103929190610f2f565b8211156103eb5760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e4f545f454e4f5547485f7344415257496044820152602760f91b606482015260840161031d565b600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561043757600080fd5b505af115801561044b573d6000803e3d6000fd5b505060015460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610f48565b6105205760405162461bcd60e51b815260206004820152602760248201527f44617277696e5374616b696e673a2057495448445241575f5452414e5346455260448201526617d1905253115160ca1b606482015260840161031d565b6040518190839033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890600090a45061055a6001600055565b50565b6105886040518060800160405280600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260056020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015290565b6105de610cf8565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106599190610f48565b6106a55760405162461bcd60e51b815260206004820152601b60248201527f44617277696e5374616b696e673a205354414b455f4641494c45440000000000604482015260640161031d565b6106ad610d51565b503360009081526005602052604090206001015442106106e9576106d18142610f7b565b33600090815260056020526040902060010155610711565b336000908152600560205260408120600101805483929061070b908490610f7b565b90915550505b6002546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561075d57600080fd5b505af1158015610771573d6000803e3d6000fd5b50506040518492503391507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a36107ac6001600055565b5050565b6107b8610cf8565b33600090815260056020526040902060020154156108265760405162461bcd60e51b815260206004820152602560248201527f44617277696e5374616b696e673a2045564f545552455f414c52454144595f53604482015264151052d15160da1b606482015260840161031d565b61082e610d51565b506003546001600160a01b0316811561084f57506004546001600160a01b03165b604051632142170760e11b8152336004820152306024820152604481018490526001600160a01b038216906342842e0e90606401600060405180830381600087803b15801561089d57600080fd5b505af11580156108b1573d6000803e3d6000fd5b505060405163ac7fc26360e01b8152600481018690526001600160a01b038416925063ac7fc2639150602401602060405180830381865afa1580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e9190610f2f565b3360008181526005602052604080822060028101859055600301879055518692917f18e285212c83a4ef243f40c28df93c75697155e95447123afb96ea187f4c655591a4506107ac6001600055565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa1580156109bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109df9190610f2f565b9050806000036109f25750600092915050565b6001600160a01b0383166000908152600560205260408120805460018201546002909201549092610a238442610f93565b9050600083851015610a8f57600085428611610a3f5785610a41565b425b610a4b9190610f93565b9050610a646301e1338068056bc75e2d63100000610faa565b81610a77671bc16d674ec800008a610faa565b610a819190610faa565b610a8b9190610fc9565b9150505b80610aa76301e1338068056bc75e2d63100000610faa565b83610aba674563918244f400008a610faa565b610ac49190610faa565b610ace9190610fc9565b610ad89190610f7b565b96508215610b03576064610aec8489610faa565b610af69190610fc9565b610b009088610f7b565b96505b505050505050919050565b610b16610cf8565b33600090815260056020526040902060020154610b835760405162461bcd60e51b815260206004820152602560248201527f44617277696e5374616b696e673a204e4f5f45564f545552455f544f5f574954604482015264484452415760d81b606482015260840161031d565b610b8b610d51565b506003805433600090815260056020526040908190209092015491516331a9108f60e11b815260048101929092526001600160a01b03169030908290636352211e90602401602060405180830381865afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c119190610feb565b6001600160a01b031614610c2d57506004546001600160a01b03165b3360008181526005602052604090819020600301549051632142170760e11b8152306004820152602481019290925260448201526001600160a01b038216906342842e0e90606401600060405180830381600087803b158015610c8f57600080fd5b505af1158015610ca3573d6000803e3d6000fd5b505033600081815260056020526040808220600281018390556003015490519094509192507fff2793899bb05ade1230c4aae5cea665d6547f23819f18f32535fbdae9309dac91a350610cf66001600055565b565b600260005403610d4a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161031d565b6002600055565b6000610d5c3361096d565b33600090815260056020526040902042905590508015610ddb576001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610dc257600080fd5b505af1158015610dd6573d6000803e3d6000fd5b505050505b90565b6001600160a01b038116811461055a57600080fd5b600080600080600060808688031215610e0b57600080fd5b8535610e1681610dde565b94506020860135610e2681610dde565b935060408601359250606086013567ffffffffffffffff80821115610e4a57600080fd5b818801915088601f830112610e5e57600080fd5b813581811115610e6d57600080fd5b896020828501011115610e7f57600080fd5b9699959850939650602001949392505050565b600060208284031215610ea457600080fd5b8135610eaf81610dde565b9392505050565b600060208284031215610ec857600080fd5b5035919050565b60008060408385031215610ee257600080fd5b50508035926020909101359150565b801515811461055a57600080fd5b60008060408385031215610f1257600080fd5b823591506020830135610f2481610ef1565b809150509250929050565b600060208284031215610f4157600080fd5b5051919050565b600060208284031215610f5a57600080fd5b8151610eaf81610ef1565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f8e57610f8e610f65565b500190565b600082821015610fa557610fa5610f65565b500390565b6000816000190483118215151615610fc457610fc4610f65565b500290565b600082610fe657634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ffd57600080fd5b8151610eaf81610dde56fea264697066735822122097c87a52ed5dfa4f4562297f16e3fa117b2321a0dc5c21d8245139e37d6041a064736f6c634300080e0033";

type DarwinStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinStaking__factory extends ContractFactory {
  constructor(...args: DarwinStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _evotures: PromiseOrValue<string>,
    _multiplier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinStaking> {
    return super.deploy(
      _darwin,
      _stakedDarwin,
      _evotures,
      _multiplier,
      overrides || {}
    ) as Promise<DarwinStaking>;
  }
  override getDeployTransaction(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _evotures: PromiseOrValue<string>,
    _multiplier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _darwin,
      _stakedDarwin,
      _evotures,
      _multiplier,
      overrides || {}
    );
  }
  override attach(address: string): DarwinStaking {
    return super.attach(address) as DarwinStaking;
  }
  override connect(signer: Signer): DarwinStaking__factory {
    return super.connect(signer) as DarwinStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinStakingInterface {
    return new utils.Interface(_abi) as DarwinStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinStaking {
    return new Contract(address, _abi, signerOrProvider) as DarwinStaking;
  }
}
