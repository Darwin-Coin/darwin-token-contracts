/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinStaking,
  DarwinStakingInterface,
} from "../../contracts/DarwinStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedDarwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_evotures",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "StakeEvoture",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
    ],
    name: "WithdrawEvoture",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_BONUS_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evotures",
    outputs: [
      {
        internalType: "contract IEvoturesNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_evotureTokenId",
        type: "uint256",
      },
    ],
    name: "stakeEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedDarwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastClaimTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161101138038061101183398101604081905261002f91610092565b6001600081905580546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600380549190931691161790556100d5565b80516001600160a01b038116811461008d57600080fd5b919050565b6000806000606084860312156100a757600080fd5b6100b084610076565b92506100be60208501610076565b91506100cc60408501610076565b90509250925092565b610f2d806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634233531e116100715780634233531e146101bb5780637b0472f0146101ce5780638ce910a5146101e1578063b35601e0146101f4578063e4fd18c914610207578063f65e0dfd1461021657600080fd5b8063150b7a02146100b95780631959a002146100f6578063252ab12d1461014b5780632bc07e32146101765780632e1a7d4d146101935780633110c792146101a8575b600080fd5b6100d86100c7366004610c4b565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61012b610104366004610ce6565b60046020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100ed565b60035461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100ed565b610185671bc16d674ec8000081565b6040519081526020016100ed565b6101a66101a1366004610d08565b61021e565b005b60015461015e906001600160a01b031681565b60025461015e906001600160a01b031681565b6101a66101dc366004610d21565b6104ce565b6101856101ef366004610ce6565b6106a8565b6101a6610202366004610d08565b610849565b610185674563918244f4000081565b6101a66109fa565b610226610b49565b6000610230610ba2565b9050811561049157336000908152600460205260409020600101544210156102975760405162461bcd60e51b815260206004820152601560248201527411185c9dda5b94dd185ada5b99ce881313d0d2d151605a1b60448201526064015b60405180910390fd5b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190610d43565b82111561035c5760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e4f545f454e4f5547485f7344415257496044820152602760f91b606482015260840161028e565b600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b505060015460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104359190610d5c565b6104915760405162461bcd60e51b815260206004820152602760248201527f44617277696e5374616b696e673a2057495448445241575f5452414e5346455260448201526617d1905253115160ca1b606482015260840161028e565b6040518190839033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890600090a4506104cb6001600055565b50565b6104d6610b49565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561052d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105519190610d5c565b61059d5760405162461bcd60e51b815260206004820152601b60248201527f44617277696e5374616b696e673a205354414b455f4641494c45440000000000604482015260640161028e565b6105a5610ba2565b503360009081526004602052604090206001015442106105e1576105c98142610d94565b33600090815260046020526040902060010155610609565b3360009081526004602052604081206001018054839290610603908490610d94565b90915550505b6002546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561065557600080fd5b505af1158015610669573d6000803e3d6000fd5b50506040518492503391507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a36106a46001600055565b5050565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a9190610d43565b90508060000361072d5750600092915050565b6001600160a01b038316600090815260046020526040812080546001820154600290920154909261075e8442610dac565b90506000838510156107ca5760008542861161077a578561077c565b425b6107869190610dac565b905061079f6301e1338068056bc75e2d63100000610dc3565b816107b2671bc16d674ec800008a610dc3565b6107bc9190610dc3565b6107c69190610de2565b9150505b806107e26301e1338068056bc75e2d63100000610dc3565b836107f5674563918244f400008a610dc3565b6107ff9190610dc3565b6108099190610de2565b6108139190610d94565b9650821561083e5760646108278489610dc3565b6108319190610de2565b61083b9088610d94565b96505b505050505050919050565b610851610b49565b33600090815260046020526040902060020154156108bf5760405162461bcd60e51b815260206004820152602560248201527f44617277696e5374616b696e673a2045564f545552455f414c52454144595f53604482015264151052d15160da1b606482015260840161028e565b6108c7610ba2565b50600354604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561091a57600080fd5b505af115801561092e573d6000803e3d6000fd5b505060035460405163ad217ae560e01b8152600481018590526001600160a01b03909116925063ad217ae5915060240161012060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190610e6b565b61010001513360008181526004602052604080822060ff909416600285018190556003909401859055518492917f18e285212c83a4ef243f40c28df93c75697155e95447123afb96ea187f4c655591a46104cb6001600055565b610a02610b49565b33600090815260046020526040902060020154610a6f5760405162461bcd60e51b815260206004820152602560248201527f44617277696e5374616b696e673a204e4f5f45564f545552455f544f5f574954604482015264484452415760d81b606482015260840161028e565b610a77610ba2565b506003805433600081815260046020819052604091829020909401549051632142170760e11b81523094810194909452602484019190915260448301526001600160a01b0316906342842e0e90606401600060405180830381600087803b158015610ae157600080fd5b505af1158015610af5573d6000803e3d6000fd5b505033600081815260046020526040808220600281018390556003015490519094509192507fff2793899bb05ade1230c4aae5cea665d6547f23819f18f32535fbdae9309dac91a3610b476001600055565b565b600260005403610b9b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161028e565b6002600055565b6000610bad336106a8565b33600090815260046020526040902042905590508015610c2c576001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610c1357600080fd5b505af1158015610c27573d6000803e3d6000fd5b505050505b90565b80356001600160a01b0381168114610c4657600080fd5b919050565b600080600080600060808688031215610c6357600080fd5b610c6c86610c2f565b9450610c7a60208701610c2f565b935060408601359250606086013567ffffffffffffffff80821115610c9e57600080fd5b818801915088601f830112610cb257600080fd5b813581811115610cc157600080fd5b896020828501011115610cd357600080fd5b9699959850939650602001949392505050565b600060208284031215610cf857600080fd5b610d0182610c2f565b9392505050565b600060208284031215610d1a57600080fd5b5035919050565b60008060408385031215610d3457600080fd5b50508035926020909101359150565b600060208284031215610d5557600080fd5b5051919050565b600060208284031215610d6e57600080fd5b81518015158114610d0157600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610da757610da7610d7e565b500190565b600082821015610dbe57610dbe610d7e565b500390565b6000816000190483118215151615610ddd57610ddd610d7e565b500290565b600082610dff57634e487b7160e01b600052601260045260246000fd5b500490565b604051610120810167ffffffffffffffff81118282101715610e3657634e487b7160e01b600052604160045260246000fd5b60405290565b805160028110610c4657600080fd5b805160058110610c4657600080fd5b805160ff81168114610c4657600080fd5b60006101208284031215610e7e57600080fd5b610e86610e04565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a0820152610ec860c08401610e3c565b60c0820152610ed960e08401610e4b565b60e0820152610100610eec818501610e5a565b90820152939250505056fea2646970667358221220f8ddfebc04603d6bb03424b7b5a90a3b4dd70410d659cd45e70de70ddbe2105d64736f6c634300080e0033";

type DarwinStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinStaking__factory extends ContractFactory {
  constructor(...args: DarwinStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _evotures: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinStaking> {
    return super.deploy(
      _darwin,
      _stakedDarwin,
      _evotures,
      overrides || {}
    ) as Promise<DarwinStaking>;
  }
  override getDeployTransaction(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _evotures: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _darwin,
      _stakedDarwin,
      _evotures,
      overrides || {}
    );
  }
  override attach(address: string): DarwinStaking {
    return super.attach(address) as DarwinStaking;
  }
  override connect(signer: Signer): DarwinStaking__factory {
    return super.connect(signer) as DarwinStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinStakingInterface {
    return new utils.Interface(_abi) as DarwinStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinStaking {
    return new Contract(address, _abi, signerOrProvider) as DarwinStaking;
  }
}
