/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinStaking,
  DarwinStakingInterface,
} from "../../contracts/DarwinStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedDarwin",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_supportedNFTs",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "StakeEvoture",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
    ],
    name: "WithdrawEvoture",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOCK_BONUS_APR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
    ],
    name: "addSupportedNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "bonusAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "bonus",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lastClaimTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boost",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct IDarwinStaking.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
    ],
    name: "removeSupportedNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "stakeEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedDarwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastClaimTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boost",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEvoture",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014ed380380620014ed833981016040819052620000349162000121565b6001600081815560038054336001600160a01b031991821617909155825481166001600160a01b038781169190911790935560028054909116928516929092179091555b8151811015620000e4576001600460008484815181106200009d576200009d6200021b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000db8162000231565b91505062000078565b5050505062000259565b80516001600160a01b03811681146200010657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200013757600080fd5b6200014284620000ee565b9250602062000153818601620000ee565b60408601519093506001600160401b03808211156200017157600080fd5b818701915087601f8301126200018657600080fd5b8151818111156200019b576200019b6200010b565b8060051b604051601f19603f83011681018181108582111715620001c357620001c36200010b565b60405291825284820192508381018501918a831115620001e257600080fd5b938501935b828510156200020b57620001fb85620000ee565b84529385019392850192620001e7565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016200025257634e487b7160e01b600052601160045260246000fd5b5060010190565b61128480620002696000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636386c1c7116100a25780638ce910a5116100715780638ce910a51461032457806391cca3db14610337578063c8312a541461034a578063e4fd18c91461035d578063f65e0dfd1461036c57600080fd5b80636386c1c7146102885780637b0472f0146102eb5780637b1eb219146102fe5780637b2c3a851461031157600080fd5b80633110c792116100de5780633110c792146102045780633871fc391461022f5780634233531e14610242578063566a7ac31461025557600080fd5b8063150b7a02146101105780631959a0021461014d5780632bc07e32146101d25780632e1a7d4d146101ef575b600080fd5b61012f61011e366004611072565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61019c61015b36600461110d565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501549294919390926001600160a01b039091169086565b6040805196875260208701959095529385019290925260608401526001600160a01b0316608083015260a082015260c001610144565b6101e1671bc16d674ec8000081565b604051908152602001610144565b6102026101fd366004611128565b610374565b005b600154610217906001600160a01b031681565b6040516001600160a01b039091168152602001610144565b6101e161023d36600461110d565b610624565b600254610217906001600160a01b031681565b61027861026336600461110d565b60046020526000908152604090205460ff1681565b6040519015158152602001610144565b61029b61029636600461110d565b610697565b6040516101449190815181526020808301519082015260408083015190820152606080830151908201526080808301516001600160a01b03169082015260a0918201519181019190915260c00190565b6102026102f9366004611141565b61073c565b61020261030c366004611163565b61092f565b61020261031f36600461110d565b610b61565b6101e161033236600461110d565b610bdf565b600354610217906001600160a01b031681565b61020261035836600461110d565b610d82565b6101e1674563918244f4000081565b610202610dfd565b61037c610f70565b6000610386610fc9565b905081156105e757336000908152600560205260409020600201544210156103ed5760405162461bcd60e51b815260206004820152601560248201527411185c9dda5b94dd185ada5b99ce881313d0d2d151605a1b60448201526064015b60405180910390fd5b6002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610459919061118d565b8211156104b25760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e4f545f454e4f5547485f7344415257496044820152602760f91b60648201526084016103e4565b600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156104fe57600080fd5b505af1158015610512573d6000803e3d6000fd5b505060015460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b91906111a6565b6105e75760405162461bcd60e51b815260206004820152602760248201527f44617277696e5374616b696e673a2057495448445241575f5452414e5346455260448201526617d1905253115160ca1b60648201526084016103e4565b6040518190839033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890600090a4506106216001600055565b50565b6001600160a01b038116600090815260056020526040812060018101546002909101548291610652916111de565b90506301e13380811061066f5750671bc16d674ec8000092915050565b6301e13380610686671bc16d674ec80000836111f5565b6106909190611214565b9392505050565b6106d96040518060c001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081525090565b506001600160a01b03908116600090815260056020818152604092839020835160c081018552815481526001820154928101929092526002810154938201939093526003830154606082015260048301549093166080840152015460a082015290565b610744610f70565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561079b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bf91906111a6565b61080b5760405162461bcd60e51b815260206004820152601b60248201527f44617277696e5374616b696e673a205354414b455f4641494c4544000000000060448201526064016103e4565b610813610fc9565b5033600090815260056020526040902060020154421061086857336000908152600560205260409020426001909101819055610850908290611236565b33600090815260056020526040902060020155610890565b336000908152600560205260408120600201805483929061088a908490611236565b90915550505b6002546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b50506040518492503391507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a361092b6001600055565b5050565b610937610f70565b336000908152600560205260409020600401546001600160a01b0316156109aa5760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e46545f414c52454144595f5354414b456044820152601160fa1b60648201526084016103e4565b6001600160a01b03821660009081526004602052604090205460ff16610a125760405162461bcd60e51b815260206004820152601e60248201527f44617277696e5374616b696e673a20554e535550504f525445445f4e4654000060448201526064016103e4565b610a1a610fc9565b50604051632142170760e11b8152336004820152306024820152604481018290526001600160a01b038316906342842e0e90606401600060405180830381600087803b158015610a6957600080fd5b505af1158015610a7d573d6000803e3d6000fd5b50503360009081526005602052604090819020600490810180546001600160a01b0319166001600160a01b038816908117909155915163ac7fc26360e01b815290810185905290925063ac7fc2639150602401602060405180830381865afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b11919061118d565b33600081815260056020819052604080832060038101869055909101859055518492917f18e285212c83a4ef243f40c28df93c75697155e95447123afb96ea187f4c655591a461092b6001600055565b6003546001600160a01b03163314610bbb5760405162461bcd60e51b815260206004820181905260248201527f44617277696e5374616b696e673a2043414c4c45525f49535f4e4f545f44455660448201526064016103e4565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c51919061118d565b905080600003610c645750600092915050565b6001600160a01b0383166000908152600560205260408120805460028201546003909201549092610c9584426111de565b9050600083851015610d0257600085428611610cb15785610cb3565b425b610cbd91906111de565b9050610cd66301e1338068056bc75e2d631000006111f5565b81610ce08b610624565b610cea908a6111f5565b610cf491906111f5565b610cfe9190611214565b9150505b80610d1a6301e1338068056bc75e2d631000006111f5565b83610d2d674563918244f400008a6111f5565b610d3791906111f5565b610d419190611214565b610d4b9190611236565b96508215610d77576103e8610d6084896111f5565b610d6a9190611214565b610d749088611236565b96505b505050505050919050565b6003546001600160a01b03163314610ddc5760405162461bcd60e51b815260206004820181905260248201527f44617277696e5374616b696e673a2043414c4c45525f49535f4e4f545f44455660448201526064016103e4565b6001600160a01b03166000908152600460205260409020805460ff19169055565b610e05610f70565b336000908152600560205260409020600401546001600160a01b0316610e775760405162461bcd60e51b815260206004820152602160248201527f44617277696e5374616b696e673a204e4f5f4e46545f544f5f574954484452416044820152605760f81b60648201526084016103e4565b610e7f610fc9565b503360008181526005602081905260409182902060048082015491909201549251632142170760e11b81523092810192909252602482019390935260448101919091526001600160a01b03909116906342842e0e90606401600060405180830381600087803b158015610ef157600080fd5b505af1158015610f05573d6000803e3d6000fd5b50503360008181526005602081905260408083206004810180546001600160a01b031916905560038101849055909101829055519093509091507fff2793899bb05ade1230c4aae5cea665d6547f23819f18f32535fbdae9309dac908390a3610f6e6001600055565b565b600260005403610fc25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b6002600055565b6000610fd433610bdf565b33600090815260056020526040902042905590508015611053576001546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561103a57600080fd5b505af115801561104e573d6000803e3d6000fd5b505050505b90565b80356001600160a01b038116811461106d57600080fd5b919050565b60008060008060006080868803121561108a57600080fd5b61109386611056565b94506110a160208701611056565b935060408601359250606086013567ffffffffffffffff808211156110c557600080fd5b818801915088601f8301126110d957600080fd5b8135818111156110e857600080fd5b8960208285010111156110fa57600080fd5b9699959850939650602001949392505050565b60006020828403121561111f57600080fd5b61069082611056565b60006020828403121561113a57600080fd5b5035919050565b6000806040838503121561115457600080fd5b50508035926020909101359150565b6000806040838503121561117657600080fd5b61117f83611056565b946020939093013593505050565b60006020828403121561119f57600080fd5b5051919050565b6000602082840312156111b857600080fd5b8151801515811461069057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156111f0576111f06111c8565b500390565b600081600019048311821515161561120f5761120f6111c8565b500290565b60008261123157634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611249576112496111c8565b50019056fea264697066735822122007a06d3b5907f8cba3d8b6fe0bae1fb5b31381d9caf73ab04bf4569412cbee3c64736f6c634300080e0033";

type DarwinStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinStaking__factory extends ContractFactory {
  constructor(...args: DarwinStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _supportedNFTs: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinStaking> {
    return super.deploy(
      _darwin,
      _stakedDarwin,
      _supportedNFTs,
      overrides || {}
    ) as Promise<DarwinStaking>;
  }
  override getDeployTransaction(
    _darwin: PromiseOrValue<string>,
    _stakedDarwin: PromiseOrValue<string>,
    _supportedNFTs: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _darwin,
      _stakedDarwin,
      _supportedNFTs,
      overrides || {}
    );
  }
  override attach(address: string): DarwinStaking {
    return super.attach(address) as DarwinStaking;
  }
  override connect(signer: Signer): DarwinStaking__factory {
    return super.connect(signer) as DarwinStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinStakingInterface {
    return new utils.Interface(_abi) as DarwinStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinStaking {
    return new Contract(address, _abi, signerOrProvider) as DarwinStaking;
  }
}
