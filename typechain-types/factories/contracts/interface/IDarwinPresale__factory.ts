/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDarwinPresale,
  IDarwinPresaleInterface,
} from "../../../contracts/interface/IDarwinPresale";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsHardcap",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndDate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartDate",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "PresaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PresaleNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "unsoldDarwinAmount",
        type: "uint256",
      },
    ],
    name: "PresaleCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "PresaleEndDateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "darwinAmount",
        type: "uint256",
      },
    ],
    name: "UserDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet1",
        type: "address",
      },
    ],
    name: "Wallet1Set",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet2",
        type: "address",
      },
    ],
    name: "Wallet2Set",
    type: "event",
  },
] as const;

export class IDarwinPresale__factory {
  static readonly abi = _abi;
  static createInterface(): IDarwinPresaleInterface {
    return new utils.Interface(_abi) as IDarwinPresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDarwinPresale {
    return new Contract(address, _abi, signerOrProvider) as IDarwinPresale;
  }
}
