/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DarwinVester,
  DarwinVesterInterface,
} from "../../contracts/DarwinVester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_due",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_supportedNFTs",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsClaimable",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsWithdrawable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPrivateSale",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVestUser",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "StakeEvoture",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "vestAmount",
        type: "uint256",
      },
    ],
    name: "Vest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "evotureTokenId",
        type: "uint256",
      },
    ],
    name: "WithdrawEvoture",
    type: "event",
  },
  {
    inputs: [],
    name: "INTEREST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MONTHS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boost",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "withdrawableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012493803806200124983398101604081905262000034916200033a565b600160005562000044336200016e565b60005b8351811015620000cc5782818151811062000066576200006662000425565b60200260200101516002600086848151811062000087576200008762000425565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600101819055508080620000c3906200043b565b91505062000047565b508251620000e2906003906020860190620001c0565b50600580546001600160a01b0319163317905560005b815181101562000164576001600660008484815181106200011d576200011d62000425565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806200015b816200043b565b915050620000f8565b5050505062000463565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805482825590600052602060002090810192821562000218579160200282015b828111156200021857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001e1565b50620002269291506200022a565b5090565b5b808211156200022657600081556001016200022b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000282576200028262000241565b604052919050565b60006001600160401b03821115620002a657620002a662000241565b5060051b60200190565b600082601f830112620002c257600080fd5b81516020620002db620002d5836200028a565b62000257565b82815260059290921b84018101918181019086841115620002fb57600080fd5b8286015b848110156200032f5780516001600160a01b0381168114620003215760008081fd5b8352918301918301620002ff565b509695505050505050565b6000806000606084860312156200035057600080fd5b83516001600160401b03808211156200036857600080fd5b6200037687838801620002b0565b94506020915081860151818111156200038e57600080fd5b8601601f81018813620003a057600080fd5b8051620003b1620002d5826200028a565b81815260059190911b8201840190848101908a831115620003d157600080fd5b928501925b82841015620003f157835182529285019290850190620003d6565b60408a01519097509450505050808211156200040c57600080fd5b506200041b86828701620002b0565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600182016200045c57634e487b7160e01b600052601160045260246000fd5b5060010190565b610dd680620004736000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638ce910a511610097578063deb36e3211610066578063deb36e3214610277578063eec414aa1461027f578063f2fde38b14610292578063ff60dfb6146102a557600080fd5b80638ce910a5146102385780638da5cb5b1461024b5780638fa626f21461025c578063d5f394881461026457600080fd5b80632e1a7d4d116100d35780632e1a7d4d146101bf5780633110c792146101d2578063566a7ac3146101fd578063715018a61461023057600080fd5b80630dea38b6146100fa5780631959a0021461011557806319ab453c146101aa575b600080fd5b6101026102ae565b6040519081526020015b60405180910390f35b61016c610123366004610c80565b600260208190526000918252604090912080546001820154928201546003830154600484015460058501546006909501549395949293919290916001600160a01b039091169087565b60408051978852602088019690965294860193909352606085019190915260808401526001600160a01b031660a083015260c082015260e00161010c565b6101bd6101b8366004610c80565b6102bf565b005b6101bd6101cd366004610cb0565b610399565b6004546101e5906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61022061020b366004610c80565b60066020526000908152604090205460ff1681565b604051901515815260200161010c565b6101bd61040c565b610102610246366004610c80565b610420565b6001546001600160a01b03166101e5565b610102600c81565b6005546101e5906001600160a01b031681565b6101bd6104c4565b61010261028d366004610c80565b6107fd565b6101bd6102a0366004610c80565b6108b4565b61010261027181565b6102bc600c62278d00610cdf565b81565b6005546001600160a01b0316331461031e5760405162461bcd60e51b815260206004820152601b60248201527f5665737465723a2043616c6c6572206e6f74204465706c6f796572000000000060448201526064015b60405180910390fd5b6004546001600160a01b0316156103775760405162461bcd60e51b815260206004820152601a60248201527f5665737465723a2044617277696e20616c7265616479207365740000000000006044820152606401610315565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60075460ff166103bc576040516321c4e35760e21b815260040160405180910390fd5b33600090815260026020526040902060010154156103ed576040516374da7f2f60e11b815260040160405180910390fd5b6103f561092a565b6103ff3382610983565b6104096001600055565b50565b610414610aef565b61041e6000610b49565b565b6001600160a01b03811660009081526002602052604081206001015480820361044c5750600092915050565b6001600160a01b038316600090815260026020819052604082206003810154910154909162278d0061047e8342610cfe565b6104889190610d15565b90508281620186a061049c61027188610cdf565b6104a69190610d15565b6104b09190610cdf565b6104ba9190610cfe565b9695505050505050565b60075460ff16156105175760405162461bcd60e51b815260206004820152601b60248201527f5665737465723a20416c726561647920696e697469616c697a656400000000006044820152606401610315565b6007805460ff1916600117905560005b60035481101561040957600260006003838154811061054857610548610d37565b60009182526020808320909101546001600160a01b03168352820192909252604001902060010154600380548390811061058457610584610d37565b60009182526020822001546040516001600160a01b03909116917fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e91a36000606460026000600385815481106105dc576105dc610d37565b60009182526020808320909101546001600160a01b0316835282019290925260400190206001015461060f906019610cdf565b6106199190610d15565b600454600380549293506001600160a01b03909116916340c10f1991908590811061064657610646610d37565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101849052604401600060405180830381600087803b15801561069a57600080fd5b505af11580156106ae573d6000803e3d6000fd5b505050508060026000600385815481106106ca576106ca610d37565b60009182526020808320909101546001600160a01b0316835282019290925260400181206001018054909190610701908490610cfe565b925050819055506000600260006003858154811061072157610721610d37565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001908152602001600020600301819055506000600260006003858154811061077f5761077f610d37565b60009182526020808320909101546001600160a01b031683528201929092526040018120919091556003805442926002929091869081106107c2576107c2610d37565b60009182526020808320909101546001600160a01b0316835282019290925260400190206002015550806107f581610d4d565b915050610527565b6001600160a01b0381166000908152600260205260408120600101548082036108295750600092915050565b6001600160a01b038316600090815260026020819052604082208054910154909162278d006108588342610cfe565b6108629190610d15565b9050600c8111156108715750600c5b82600c8261087f8388610d66565b6108899190610cdf565b6108939190610d15565b61089d9190610cfe565b9450838511156108ab578394505b50505050919050565b6108bc610aef565b6001600160a01b0381166109215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610315565b61040981610b49565b60026000540361097c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610315565b6002600055565b61098c82610b9b565b8015610aeb57600061099d836107fd565b9050808211156109c0576040516304b28d1960e21b815260040160405180910390fd5b6001600160a01b038316600090815260026020526040812060010180548492906109eb908490610cfe565b90915550506001600160a01b03831660009081526002602052604081208054849290610a18908490610d66565b90915550506004805460405163a9059cbb60e01b81526001600160a01b03868116938201939093526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a969190610d7e565b610ab3576040516312171d8360e31b815260040160405180910390fd5b60405182906001600160a01b038516907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a3505b5050565b6001546001600160a01b0316331461041e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610315565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610ba633610420565b90508015610aeb576001600160a01b03821660009081526002602052604081206003018054839290610bd9908490610d66565b9091555050600480546040516340c10f1960e01b81526001600160a01b0385811693820193909352602481018490529116906340c10f1990604401600060405180830381600087803b158015610c2e57600080fd5b505af1158015610c42573d6000803e3d6000fd5b50506040518392506001600160a01b03851691507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d490600090a35050565b600060208284031215610c9257600080fd5b81356001600160a01b0381168114610ca957600080fd5b9392505050565b600060208284031215610cc257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610cf957610cf9610cc9565b500290565b600082821015610d1057610d10610cc9565b500390565b600082610d3257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610d5f57610d5f610cc9565b5060010190565b60008219821115610d7957610d79610cc9565b500190565b600060208284031215610d9057600080fd5b81518015158114610ca957600080fdfea2646970667358221220722ac0ff0c8df586ef3d1dab321163c322bda40fc2cf72be2d5917c88a58611764736f6c634300080e0033";

type DarwinVesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DarwinVesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DarwinVester__factory extends ContractFactory {
  constructor(...args: DarwinVesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _users: PromiseOrValue<string>[],
    _due: PromiseOrValue<BigNumberish>[],
    _supportedNFTs: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DarwinVester> {
    return super.deploy(
      _users,
      _due,
      _supportedNFTs,
      overrides || {}
    ) as Promise<DarwinVester>;
  }
  override getDeployTransaction(
    _users: PromiseOrValue<string>[],
    _due: PromiseOrValue<BigNumberish>[],
    _supportedNFTs: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _users,
      _due,
      _supportedNFTs,
      overrides || {}
    );
  }
  override attach(address: string): DarwinVester {
    return super.attach(address) as DarwinVester;
  }
  override connect(signer: Signer): DarwinVester__factory {
    return super.connect(signer) as DarwinVester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DarwinVesterInterface {
    return new utils.Interface(_abi) as DarwinVesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DarwinVester {
    return new Contract(address, _abi, signerOrProvider) as DarwinVester;
  }
}
