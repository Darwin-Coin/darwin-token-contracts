/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BlueDarwin,
  BlueDarwinInterface,
} from "../../contracts/BlueDarwin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "taxWhitelist",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toWhitelist",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "whitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000f1638038062000f168339810160408190526200003491620002a4565b60408051808201909152600b8082526a21363ab2902230b93bb4b760a91b60209092019182526200006891600091620001cb565b5060408051808201909152600480825263424c554560e01b60209092019182526200009691600191620001cb565b506002805460ff19166012179055336080819052620000c1906a52b7d2dcc80cd2e40000006200013e565b60005b81518160ff1610156200013657600160066000848460ff1681518110620000ef57620000ef62000376565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806200012d81620003a2565b915050620000c4565b50506200041b565b8060036000828254620001529190620003c4565b90915550506001600160a01b0382166000908152600460205260408120805483929062000181908490620003c4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001d990620003df565b90600052602060002090601f016020900481019282620001fd576000855562000248565b82601f106200021857805160ff191683800117855562000248565b8280016001018555821562000248579182015b82811115620002485782518255916020019190600101906200022b565b50620002569291506200025a565b5090565b5b808211156200025657600081556001016200025b565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200029f57600080fd5b919050565b60006020808385031215620002b857600080fd5b82516001600160401b0380821115620002d057600080fd5b818501915085601f830112620002e557600080fd5b815181811115620002fa57620002fa62000271565b8060051b604051601f19603f8301168101818110858211171562000322576200032262000271565b6040529182528482019250838101850191888311156200034157600080fd5b938501935b828510156200036a576200035a8562000287565b8452938501939285019262000346565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103620003bb57620003bb6200038c565b60010192915050565b60008219821115620003da57620003da6200038c565b500190565b600181811c90821680620003f457607f821691505b6020821081036200041557634e487b7160e01b600052602260045260246000fd5b50919050565b608051610ad86200043e6000396000818161017d015261037b0152610ad86000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461015857806391cca3db1461017857806395d89b41146101b7578063a9059cbb146101bf578063dd62ed3e146101d2578063f59c3708146101fd57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c1610210565b6040516100ce91906108a0565b60405180910390f35b6100ea6100e5366004610911565b61029e565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f36600461093b565b6102b4565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b610156610151366004610977565b610349565b005b610103610166366004610990565b60046020526000908152604090205481565b61019f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ce565b6100c1610356565b6100ea6101cd366004610911565b610363565b6101036101e03660046109b2565b600560209081526000928352604080842090915290825290205481565b61015661020b3660046109e5565b610370565b6000805461021d90610a21565b80601f016020809104026020016040519081016040528092919081815260200182805461024990610a21565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b505050505081565b60006102ab338484610418565b50600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205460001914610334576001600160a01b038416600090815260056020908152604080832033845290915290205461030f908390610a5b565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b61033f848484610547565b5060019392505050565b61035333826107ad565b50565b6001805461021d90610a21565b60006102ab338484610547565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103ed5760405162461bcd60e51b815260206004820152601c60248201527f426c756544617277696e3a2063616c6c6572206e6f74206f776e65720000000060448201526064015b60405180910390fd5b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001600160a01b0383166104805760405162461bcd60e51b815260206004820152602960248201527f426c756544617277696e3a20617070726f76652066726f6d20746865207a65726044820152686f206164647265737360b81b60648201526084016103e4565b6001600160a01b0382166104e65760405162461bcd60e51b815260206004820152602760248201527f426c756544617277696e3a20617070726f766520746f20746865207a65726f206044820152666164647265737360c81b60648201526084016103e4565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105b05760405162461bcd60e51b815260206004820152602a60248201527f426c756544617277696e3a207472616e736665722066726f6d20746865207a65604482015269726f206164647265737360b01b60648201526084016103e4565b6001600160a01b0382166106175760405162461bcd60e51b815260206004820152602860248201527f426c756544617277696e3a207472616e7366657220746f20746865207a65726f604482015267206164647265737360c01b60648201526084016103e4565b6001600160a01b03831660009081526006602052604081205460ff1615801561065957506001600160a01b03831660009081526006602052604090205460ff16155b1561066c57610669603283610a80565b90505b6001600160a01b0384166000908152600460205260409020548211156106e85760405162461bcd60e51b815260206004820152602b60248201527f426c756544617277696e3a207472616e7366657220616d6f756e74206578636560448201526a6564732062616c616e636560a81b60648201526084016103e4565b6001600160a01b038085166000818152600460205260408082208054879003905592861680825292902080548486030190556003805484900390557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61074e8486610a5b565b60405190815260200160405180910390a380156107a7576040518181526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b50505050565b6001600160a01b0382166000908152600460205260409020548111156108155760405162461bcd60e51b815260206004820181905260248201527f426c756544617277696e3a206275726e20657863656564732062616c616e636560448201526064016103e4565b6001600160a01b0382166000908152600460205260408120805483929061083d908490610a5b565b9250508190555080600360008282546108569190610a5b565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156108cd578581018301518582016040015282016108b1565b818111156108df576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461090c57600080fd5b919050565b6000806040838503121561092457600080fd5b61092d836108f5565b946020939093013593505050565b60008060006060848603121561095057600080fd5b610959846108f5565b9250610967602085016108f5565b9150604084013590509250925092565b60006020828403121561098957600080fd5b5035919050565b6000602082840312156109a257600080fd5b6109ab826108f5565b9392505050565b600080604083850312156109c557600080fd5b6109ce836108f5565b91506109dc602084016108f5565b90509250929050565b600080604083850312156109f857600080fd5b610a01836108f5565b915060208301358015158114610a1657600080fd5b809150509250929050565b600181811c90821680610a3557607f821691505b602082108103610a5557634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610a7b57634e487b7160e01b600052601160045260246000fd5b500390565b600082610a9d57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204192ad2f7a86703f2ac4aab98db9556b493aa4c4d25f9ad8937b7ddbd19acd0864736f6c634300080e0033";

type BlueDarwinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlueDarwinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlueDarwin__factory extends ContractFactory {
  constructor(...args: BlueDarwinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    taxWhitelist: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlueDarwin> {
    return super.deploy(taxWhitelist, overrides || {}) as Promise<BlueDarwin>;
  }
  override getDeployTransaction(
    taxWhitelist: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(taxWhitelist, overrides || {});
  }
  override attach(address: string): BlueDarwin {
    return super.attach(address) as BlueDarwin;
  }
  override connect(signer: Signer): BlueDarwin__factory {
    return super.connect(signer) as BlueDarwin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlueDarwinInterface {
    return new utils.Interface(_abi) as BlueDarwinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlueDarwin {
    return new Contract(address, _abi, signerOrProvider) as BlueDarwin;
  }
}
