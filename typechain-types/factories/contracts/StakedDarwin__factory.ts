/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StakedDarwin,
  StakedDarwinInterface,
} from "../../contracts/StakedDarwin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwinStaking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwinStaking",
        type: "address",
      },
    ],
    name: "setDarwinStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5033608052608051610a476100376000396000818161018c01526104a50152610a476000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639db36ed2116100665780639db36ed21461024e5780639dc29fac14610261578063a9059cbb14610274578063dd62ed3e1461028757600080fd5b806370a08231146101f557806384789b521461021557806395d89b411461022857600080fd5b806323b872dd116100c857806323b872dd146101745780633110c79214610187578063313ce567146101c657806340c10f19146101e057600080fd5b806306fdde03146100ef578063095ea7b31461013a57806318160ddd1461015d575b600080fd5b6101246040518060400160405280601681526020017514dd185ad9590811185c9dda5b88141c9bdd1bd8dbdb60521b81525081565b60405161013191906108a0565b60405180910390f35b61014d610148366004610911565b6102b2565b6040519015158152602001610131565b61016660015481565b604051908152602001610131565b61014d61018236600461093b565b6102c8565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610131565b6101ce601281565b60405160ff9091168152602001610131565b6101f36101ee366004610911565b6103cf565b005b610166610203366004610977565b60026020526000908152604090205481565b6000546101ae906001600160a01b031681565b6101246040518060400160405280600781526020016639a220a92ba4a760c91b81525081565b6101f361025c366004610977565b610437565b6101f361026f366004610911565b610534565b61014d610282366004610911565b610598565b610166610295366004610999565b600360209081526000928352604080842090915290825290205481565b60006102bf3384846105a5565b50600192915050565b6001600160a01b0383166000908152600360209081526040808320338452909152812054600019146103ba576001600160a01b03841660009081526003602090815260408083203384529091529020548211156103815760405162461bcd60e51b815260206004820152602c60248201527f5374616b656444617277696e3a205452414e5346455246524f4d5f455843454560448201526b44535f414c4c4f57414e434560a01b60648201526084015b60405180910390fd5b6001600160a01b0384166000908152600360209081526040808320338452909152812080548492906103b49084906109e2565b90915550505b6103c5848484610607565b5060019392505050565b6000546001600160a01b031633146104295760405162461bcd60e51b815260206004820181905260248201527f5374616b656444617277696e3a2043414c4c45525f4e4f545f5354414b494e476044820152606401610378565b610433828261071f565b5050565b6000546001600160a01b03161561049a5760405162461bcd60e51b815260206004820152602160248201527f5374616b656444617277696e3a205354414b494e475f414c52454144595f53456044820152601560fa1b6064820152608401610378565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105125760405162461bcd60e51b815260206004820152601f60248201527f5374616b656444617277696e3a2043414c4c45525f4e4f545f44415257494e006044820152606401610378565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461058e5760405162461bcd60e51b815260206004820181905260248201527f5374616b656444617277696e3a2043414c4c45525f4e4f545f5354414b494e476044820152606401610378565b61043382826107a9565b60006102bf338484610607565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526002602052604090205481111561067e5760405162461bcd60e51b815260206004820152602660248201527f5374616b656444617277696e3a205452414e534645525f455843454544535f42604482015265414c414e434560d01b6064820152608401610378565b6001600160a01b038316600090815260026020526040812080548392906106a69084906109e2565b90915550506001600160a01b038216600090815260026020526040812080548392906106d39084906109f9565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105fa91815260200190565b806001600082825461073191906109f9565b90915550506001600160a01b0382166000908152600260205260408120805483929061075e9084906109f9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6001600160a01b03821660009081526002602052604090205481111561081c5760405162461bcd60e51b815260206004820152602260248201527f5374616b656444617277696e3a204255524e5f455843454544535f42414c414e604482015261434560f01b6064820152608401610378565b6001600160a01b038216600090815260026020526040812080548392906108449084906109e2565b92505081905550806001600082825461085d91906109e2565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161079d565b600060208083528351808285015260005b818110156108cd578581018301518582016040015282016108b1565b818111156108df576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461090c57600080fd5b919050565b6000806040838503121561092457600080fd5b61092d836108f5565b946020939093013593505050565b60008060006060848603121561095057600080fd5b610959846108f5565b9250610967602085016108f5565b9150604084013590509250925092565b60006020828403121561098957600080fd5b610992826108f5565b9392505050565b600080604083850312156109ac57600080fd5b6109b5836108f5565b91506109c3602084016108f5565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109f4576109f46109cc565b500390565b60008219821115610a0c57610a0c6109cc565b50019056fea26469706673582212207c0f50298e28d9ef18fadc9fec6f0c4463912f436aae5b7107fc4a532f64e47264736f6c634300080e0033";

type StakedDarwinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakedDarwinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakedDarwin__factory extends ContractFactory {
  constructor(...args: StakedDarwinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakedDarwin> {
    return super.deploy(overrides || {}) as Promise<StakedDarwin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakedDarwin {
    return super.attach(address) as StakedDarwin;
  }
  override connect(signer: Signer): StakedDarwin__factory {
    return super.connect(signer) as StakedDarwin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedDarwinInterface {
    return new utils.Interface(_abi) as StakedDarwinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedDarwin {
    return new Contract(address, _abi, signerOrProvider) as StakedDarwin;
  }
}
