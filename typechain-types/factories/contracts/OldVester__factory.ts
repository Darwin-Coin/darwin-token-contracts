/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { OldVester, OldVesterInterface } from "../../contracts/OldVester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsClaimable",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountExceedsWithdrawable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPrivateSale",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "vestAmount",
        type: "uint256",
      },
    ],
    name: "Vest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "INTEREST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MONTHS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_privateSale",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "privateSale",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "withdrawableDarwin",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c10380380610c1083398101604081905261002f916100db565b600160005561003d33610089565b6001600160a01b0381166100645760405163d92e233d60e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b039290921691909117905561010b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100ed57600080fd5b81516001600160a01b038116811461010457600080fd5b9392505050565b610af68061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638ce910a51161008c578063ba1f879f11610066578063ba1f879f146101fb578063eec414aa1461020e578063f2fde38b14610221578063ff60dfb61461023457600080fd5b80638ce910a5146101cf5780638da5cb5b146101e25780638fa626f2146101f357600080fd5b80632e1a7d4d116100c85780632e1a7d4d146101765780633110c7921461018957806347e7ef24146101b4578063715018a6146101c757600080fd5b80630dea38b6146100ef5780631959a0021461010a57806319ab453c14610161575b600080fd5b6100f761023d565b6040519081526020015b60405180910390f35b6101416101183660046109b3565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b604080519485526020850193909352918301526060820152608001610101565b61017461016f3660046109b3565b61024e565b005b6101746101843660046109d5565b6102a9565b60035461019c906001600160a01b031681565b6040516001600160a01b039091168152602001610101565b6101746101c23660046109ee565b6102c8565b61017461044e565b6100f76101dd3660046109b3565b610462565b6001546001600160a01b031661019c565b6100f7600c81565b60045461019c906001600160a01b031681565b6100f761021c3660046109b3565b610513565b61017461022f3660046109b3565b6105ca565b6100f761024781565b61024b600c62278d00610a2e565b81565b610256610645565b600454600160a01b900460ff16156102805760405162dc149f60e41b815260040160405180910390fd5b600480546001600160a01b039092166001600160a81b031990921691909117600160a01b179055565b6102b161069f565b6102bb33826106f8565b6102c56001600055565b50565b600454600160a01b900460ff166102f2576040516321c4e35760e21b815260040160405180910390fd5b6004546001600160a01b0316331461031d57604051638edbb5a960e01b815260040160405180910390fd5b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610a4d565b6103b5576040516312171d8360e31b815260040160405180910390fd5b6103c7826103c284610513565b6106f8565b6001600160a01b038216600090815260026020526040812060010180548392906103f2908490610a6f565b90915550506001600160a01b03821660008181526002602081905260408083206003810184905583815542920191909155518392917fd4a50953e9ae2104f507446be8391c79b33e1e86e626473e34bb79eb5fea1f3e91a35050565b610456610645565b6104606000610862565b565b6001600160a01b03811660009081526002602052604081206001015480820361048e5750600092915050565b6001600160a01b038316600090815260026020819052604082206003810154910154909162278d006104c08342610a87565b6104ca9190610a9e565b9050600c8111156104d95750600c5b8281620186a06104eb61024788610a2e565b6104f59190610a9e565b6104ff9190610a2e565b6105099190610a87565b9695505050505050565b6001600160a01b03811660009081526002602052604081206001015480820361053f5750600092915050565b6001600160a01b038316600090815260026020819052604082208054910154909162278d0061056e8342610a87565b6105789190610a9e565b9050600c8111156105875750600c5b82600c826105958388610a6f565b61059f9190610a2e565b6105a99190610a9e565b6105b39190610a87565b9450838511156105c1578394505b50505050919050565b6105d2610645565b6001600160a01b03811661063c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102c581610862565b6001546001600160a01b031633146104605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610633565b6002600054036106f15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610633565b6002600055565b610701826108b4565b801561085e57600061071283610513565b905080821115610735576040516304b28d1960e21b815260040160405180910390fd5b6001600160a01b03831660009081526002602052604081206001018054849290610760908490610a87565b90915550506001600160a01b0383166000908152600260205260408120805484929061078d908490610a6f565b909155505060035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af11580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108099190610a4d565b610826576040516312171d8360e31b815260040160405180910390fd5b60405182906001600160a01b038516907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436490600090a3505b5050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006108bf33610462565b9050801561085e576001600160a01b038216600090815260026020526040812060030180548392906108f2908490610a6f565b90915550506003546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561094557600080fd5b505af1158015610959573d6000803e3d6000fd5b50506040518392506001600160a01b03851691507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d490600090a35050565b80356001600160a01b03811681146109ae57600080fd5b919050565b6000602082840312156109c557600080fd5b6109ce82610997565b9392505050565b6000602082840312156109e757600080fd5b5035919050565b60008060408385031215610a0157600080fd5b610a0a83610997565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a4857610a48610a18565b500290565b600060208284031215610a5f57600080fd5b815180151581146109ce57600080fd5b60008219821115610a8257610a82610a18565b500190565b600082821015610a9957610a99610a18565b500390565b600082610abb57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c92c39443925d6cb62868c44664a2c687139dded38fe15f17d88b83de0ee4a2a64736f6c634300080e0033";

type OldVesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OldVesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OldVester__factory extends ContractFactory {
  constructor(...args: OldVesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _darwin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OldVester> {
    return super.deploy(_darwin, overrides || {}) as Promise<OldVester>;
  }
  override getDeployTransaction(
    _darwin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_darwin, overrides || {});
  }
  override attach(address: string): OldVester {
    return super.attach(address) as OldVester;
  }
  override connect(signer: Signer): OldVester__factory {
    return super.connect(signer) as OldVester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OldVesterInterface {
    return new utils.Interface(_abi) as OldVesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OldVester {
    return new Contract(address, _abi, signerOrProvider) as OldVester;
  }
}
