/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BoosterNFT,
  BoosterNFTInterface,
  IBoosterNFT,
} from "../../contracts/BoosterNFT";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "unminted",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "no",
            type: "uint8",
          },
        ],
        internalType: "struct IBoosterNFT.Kind[]",
        name: "unminted_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_tokenId",
        type: "uint16",
      },
    ],
    name: "boosterInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "multiplier",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "no",
            type: "uint8",
          },
        ],
        internalType: "struct IBoosterNFT.BoosterInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evotures",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTokenId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_index",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_randomWords",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_evotures",
        type: "address",
      },
    ],
    name: "setEvotures",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unminted",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "unminted",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "no",
            type: "uint8",
          },
        ],
        internalType: "struct IBoosterNFT.Kind[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200268b3803806200268b833981016040819052620000349162000640565b604080518082018252601581527f45766f747572657320426f6f73746572204e4654730000000000000000000000602080830191825283518085019094526008845267115593d093d3d4d560c21b90840152815191929162000099916000916200050f565b508051620000af9060019060208401906200050f565b5050336080819052620000c59150600162000171565b620000d233600262000171565b6006805461ffff60a01b1916600160a11b17905560005b81518160ff16101562000169576008828260ff16815181106200011057620001106200072d565b6020908102919091018101518254600181018455600093845292829020815193018054919092015160ff9081166101000261ffff1990921693169290921791909117905580620001608162000743565b915050620000e9565b50506200085b565b620001938282604051806020016040528060008152506200019760201b60201c565b5050565b620001a3838362000213565b620001b26000848484620003a4565b6200020e5760405162461bcd60e51b815260206004820152603260248201526000805160206200266b83398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084015b60405180910390fd5b505050565b6001600160a01b0382166200026b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640162000205565b6000818152600260205260409020546001600160a01b031615620002d25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640162000205565b6000818152600260205260409020546001600160a01b031615620003395760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640162000205565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000620003c5846001600160a01b03166200050060201b62000d6d1760201c565b15620004f457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290620003ff90339089908890889060040162000771565b6020604051808303816000875af19250505080156200043d575060408051601f3d908101601f191682019092526200043a91810190620007ec565b60015b620004d9573d8080156200046e576040519150601f19603f3d011682016040523d82523d6000602084013e62000473565b606091505b508051600003620004d15760405162461bcd60e51b815260206004820152603260248201526000805160206200266b83398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840162000205565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050620004f8565b5060015b949350505050565b6001600160a01b03163b151590565b8280546200051d906200081f565b90600052602060002090601f0160209004810192826200054157600085556200058c565b82601f106200055c57805160ff19168380011785556200058c565b828001600101855582156200058c579182015b828111156200058c5782518255916020019190600101906200056f565b506200059a9291506200059e565b5090565b5b808211156200059a57600081556001016200059f565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620005f057620005f0620005b5565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620006215762000621620005b5565b604052919050565b805160ff811681146200063b57600080fd5b919050565b600060208083850312156200065457600080fd5b82516001600160401b03808211156200066c57600080fd5b818501915085601f8301126200068157600080fd5b815181811115620006965762000696620005b5565b620006a6848260051b01620005f6565b818152848101925060069190911b830184019087821115620006c757600080fd5b928401925b81841015620007225760408489031215620006e75760008081fd5b620006f1620005cb565b620006fc8562000629565b81526200070b86860162000629565b8187015283526040939093019291840191620006cc565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036200076857634e487b7160e01b600052601160045260246000fd5b60010192915050565b600060018060a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015620007c05785810182015185820160a001528101620007a2565b82811115620007d357600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215620007ff57600080fd5b81516001600160e01b0319811681146200081857600080fd5b9392505050565b600181811c908216806200083457607f821691505b6020821081036200085557634e487b7160e01b600052602260045260246000fd5b50919050565b608051611ded6200087e600039600081816102de01526105f20152611ded6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b8578063adb9be9f1161007c578063adb9be9f1461031b578063b88d4fde1461033b578063c87b56dd1461034e578063e8a3d48514610361578063e985e9c514610369578063f84ddf0b1461037c57600080fd5b80636352211e146102a557806370a08231146102b857806391cca3db146102d957806395d89b4114610300578063a22cb4651461030857600080fd5b8063252ab12d1161010a578063252ab12d146101d75780632b083ead146101ea57806332cb6b0c146101fd578063373215891461021957806342842e0e1461022e57806359ea5adb1461024157600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af57806323b872dd146101c4575b600080fd5b61015a6101553660046115f5565b610391565b60405190151581526020015b60405180910390f35b6101776103e3565b604051610166919061166a565b61019761019236600461167d565b610475565b6040516001600160a01b039091168152602001610166565b6101c26101bd3660046116ad565b61049c565b005b6101c26101d23660046116d7565b6105b6565b600654610197906001600160a01b031681565b6101c26101f8366004611713565b6105e7565b61020661070881565b60405161ffff9091168152602001610166565b6102216106f8565b604051610166919061172e565b6101c261023c3660046116d7565b610766565b61029861024f36600461178b565b60408051808201909152600080825260208201525061ffff1660009081526007602090815260409182902082518084019093525460ff8082168452610100909104169082015290565b60405161016691906117af565b6101976102b336600461167d565b610781565b6102cb6102c6366004611713565b6107e1565b604051908152602001610166565b6101977f000000000000000000000000000000000000000000000000000000000000000081565b610177610867565b6101c26103163660046117cd565b610876565b61032e610329366004611861565b610885565b604051610166919061193b565b6101c2610349366004611983565b610c63565b61017761035c36600461167d565b610c9b565b610177610d1f565b61015a610377366004611a43565b610d3f565b60065461020690600160a01b900461ffff1681565b60006001600160e01b031982166380ac58cd60e01b14806103c257506001600160e01b03198216635b5e139f60e01b145b806103dd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103f290611a76565b80601f016020809104026020016040519081016040528092919081815260200182805461041e90611a76565b801561046b5780601f106104405761010080835404028352916020019161046b565b820191906000526020600020905b81548152906001019060200180831161044e57829003601f168201915b5050505050905090565b600061048082610d7c565b506000908152600460205260409020546001600160a01b031690565b60006104a782610781565b9050806001600160a01b0316836001600160a01b0316036105195760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061053557506105358133610d3f565b6105a75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610510565b6105b18383610dde565b505050565b6105c03382610e4c565b6105dc5760405162461bcd60e51b815260040161051090611ab0565b6105b1838383610eaa565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461066f5760405162461bcd60e51b815260206004820152602760248201527f426f6f737465724e46543a3a73657445766f74757265733a2043414c4c45525f6044820152662727aa2fa222ab60c91b6064820152608401610510565b6006546001600160a01b0316156106d65760405162461bcd60e51b815260206004820152602560248201527f426f6f737465724e46543a3a73657445766f74757265733a2045564f5455524560448201526414d7d4d15560da1b6064820152608401610510565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60606008805480602002602001604051908101604052809291908181526020016000905b8282101561075d576000848152602090819020604080518082019091529084015460ff8082168352610100909104168183015282526001909201910161071c565b50505050905090565b6105b183838360405180602001604052806000815250610c63565b6000818152600260205260408120546001600160a01b0316806103dd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610510565b60006001600160a01b03821661084b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610510565b506001600160a01b031660009081526003602052604090205490565b6060600180546103f290611a76565b61088133838361100e565b5050565b6006546060906001600160a01b031633146108f05760405162461bcd60e51b815260206004820152602560248201527f426f6f737465724e46543a3a6d696e743a2043414c4c45525f4e4f545f45564f604482015264545552455360d81b6064820152608401610510565b60065460ff86169061090f90600160a01b900461ffff16610708611b13565b61ffff1610156109615760405162461bcd60e51b815260206004820152601f60248201527f426f6f737465724e46543a3a6d696e743a204d494e545f4558434545444544006044820152606401610510565b60008560ff1667ffffffffffffffff81111561097f5761097f61181a565b6040519080825280602002602001820160405280156109a8578160200160208202803683370190505b50905060006109b8866001611b36565b905060005b8760ff168160ff161015610c5557600854600090876109dc8486611b36565b60ff16815181106109ef576109ef611b5b565b6020026020010151610a019190611b71565b9050600060088261ffff1681548110610a1c57610a1c611b5b565b6000918252602090912001546006805461010090920460ff169250600160a01b90910461ffff16906014610a4f83611b93565b91906101000a81548161ffff021916908361ffff16021790555050610a8887600660149054906101000a900461ffff1661ffff166110dc565b600660149054906101000a900461ffff16858460ff1681518110610aae57610aae611b5b565b602002602001019061ffff16908161ffff1681525050610acd816110f6565b6006805461ffff600160a01b918290048116600090815260076020526040808220805460ff97881660ff199091161790559354929092048116825291902080549284166101000261ff0019909316929092179091556008805490918416908110610b3957610b39611b5b565b60009182526020822001805460ff1691610b5283611bb4565b91906101000a81548160ff021916908360ff1602179055505060088261ffff1681548110610b8257610b82611b5b565b600091825260208220015460ff169003610c405760088054610ba690600190611bd1565b81548110610bb657610bb6611b5b565b9060005260206000200160088361ffff1681548110610bd757610bd7611b5b565b6000918252602090912082549101805460ff92831660ff19821681178355935461ffff19909116909317610100938490049092169092021790556008805480610c2257610c22611be8565b6000828152602090208101600019908101805461ffff191690550190555b50508080610c4d90611bfe565b9150506109bd565b50909150505b949350505050565b610c6d3383610e4c565b610c895760405162461bcd60e51b815260040161051090611ab0565b610c9584848484611165565b50505050565b6060610ca682610d7c565b6000610cb0611198565b90506000815111610cd05760405180602001604052806000815250610d18565b61ffff83166000908152600760205260409020548190610cf790610100900460ff166111b8565b604051602001610d08929190611c1d565b6040516020818303038152906040525b9392505050565b6060604051806060016040528060278152602001611d4e60279139905090565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160a01b03163b151590565b6000818152600260205260409020546001600160a01b0316610ddb5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610510565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e1382610781565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e5883610781565b9050806001600160a01b0316846001600160a01b03161480610e7f5750610e7f8185610d3f565b80610c5b5750836001600160a01b0316610e9884610475565b6001600160a01b031614949350505050565b826001600160a01b0316610ebd82610781565b6001600160a01b031614610ee35760405162461bcd60e51b815260040161051090611c5c565b6001600160a01b038216610f455760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610510565b826001600160a01b0316610f5882610781565b6001600160a01b031614610f7e5760405162461bcd60e51b815260040161051090611c5c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361106f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610510565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61088182826040518060200160405280600081525061124b565b600060038260ff16101561110c57506032919050565b60068260ff16101561112057506019919050565b600a8260ff16101561113457506014919050565b600f8260ff1610156111485750600f919050565b60158260ff16101561115c5750600a919050565b5060055b919050565b611170848484610eaa565b61117c8484848461127e565b610c955760405162461bcd60e51b815260040161051090611ca1565b6060604051806080016040528060438152602001611d7560439139905090565b606060006111c58361137c565b600101905060008167ffffffffffffffff8111156111e5576111e561181a565b6040519080825280601f01601f19166020018201604052801561120f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461121957509392505050565b6112558383611454565b611262600084848461127e565b6105b15760405162461bcd60e51b815260040161051090611ca1565b60006001600160a01b0384163b1561137457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112c2903390899088908890600401611cf3565b6020604051808303816000875af19250505080156112fd575060408051601f3d908101601f191682019092526112fa91810190611d30565b60015b61135a573d80801561132b576040519150601f19603f3d011682016040523d82523d6000602084013e611330565b606091505b5080516000036113525760405162461bcd60e51b815260040161051090611ca1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c5b565b506001610c5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113bb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106113e7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061140557662386f26fc10000830492506010015b6305f5e100831061141d576305f5e100830492506008015b612710831061143157612710830492506004015b60648310611443576064830492506002015b600a83106103dd5760010192915050565b6001600160a01b0382166114aa5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610510565b6000818152600260205260409020546001600160a01b03161561150f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610510565b6000818152600260205260409020546001600160a01b0316156115745760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610510565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610ddb57600080fd5b60006020828403121561160757600080fd5b8135610d18816115df565b60005b8381101561162d578181015183820152602001611615565b83811115610c955750506000910152565b60008151808452611656816020860160208601611612565b601f01601f19169290920160200192915050565b602081526000610d18602083018461163e565b60006020828403121561168f57600080fd5b5035919050565b80356001600160a01b038116811461116057600080fd5b600080604083850312156116c057600080fd5b6116c983611696565b946020939093013593505050565b6000806000606084860312156116ec57600080fd5b6116f584611696565b925061170360208501611696565b9150604084013590509250925092565b60006020828403121561172557600080fd5b610d1882611696565b602080825282518282018190526000919060409081850190868401855b8281101561177e5761176e848351805160ff908116835260209182015116910152565b928401929085019060010161174b565b5091979650505050505050565b60006020828403121561179d57600080fd5b813561ffff81168114610d1857600080fd5b604081016103dd8284805160ff908116835260209182015116910152565b600080604083850312156117e057600080fd5b6117e983611696565b9150602083013580151581146117fe57600080fd5b809150509250929050565b803560ff8116811461116057600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118595761185961181a565b604052919050565b6000806000806080858703121561187757600080fd5b61188085611809565b9350602061188f818701611809565b9350604086013567ffffffffffffffff808211156118ac57600080fd5b818801915088601f8301126118c057600080fd5b8135818111156118d2576118d261181a565b8060051b91506118e3848301611830565b818152918301840191848101908b8411156118fd57600080fd5b938501935b8385101561191b57843582529385019390850190611902565b80975050505050505061193060608601611696565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b8181101561197757835161ffff1683529284019291840191600101611957565b50909695505050505050565b6000806000806080858703121561199957600080fd5b6119a285611696565b935060206119b1818701611696565b935060408601359250606086013567ffffffffffffffff808211156119d557600080fd5b818801915088601f8301126119e957600080fd5b8135818111156119fb576119fb61181a565b611a0d601f8201601f19168501611830565b91508082528984828501011115611a2357600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611a5657600080fd5b611a5f83611696565b9150611a6d60208401611696565b90509250929050565b600181811c90821680611a8a57607f821691505b602082108103611aaa57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600061ffff83811690831681811015611b2e57611b2e611afd565b039392505050565b600060ff821660ff84168060ff03821115611b5357611b53611afd565b019392505050565b634e487b7160e01b600052603260045260246000fd5b600082611b8e57634e487b7160e01b600052601260045260246000fd5b500690565b600061ffff808316818103611baa57611baa611afd565b6001019392505050565b600060ff821680611bc757611bc7611afd565b6000190192915050565b600082821015611be357611be3611afd565b500390565b634e487b7160e01b600052603160045260246000fd5b600060ff821660ff8103611c1457611c14611afd565b60010192915050565b60008351611c2f818460208801611612565b835190830190611c43818360208801611612565b64173539b7b760d91b9101908152600501949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d269083018461163e565b9695505050505050565b600060208284031215611d4257600080fd5b8151610d18816115df56fe68747470733a2f2f64617277696e70726f746f636f6c2e696f2f626f6f73746572732e6a736f6e697066733a2f2f62616679626569626f6a3336706e6b75786b6c6137666d7437787670783476356a7576676b6471636d646d726e64346e696f716b713566766a63612fa2646970667358221220fc632459415ba907d4aaeeeb8ac489403e89c395565ff60dee4c96e8e3055adb64736f6c634300080e00334552433732313a207472616e7366657220746f206e6f6e204552433732315265";

type BoosterNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoosterNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoosterNFT__factory extends ContractFactory {
  constructor(...args: BoosterNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    unminted_: IBoosterNFT.KindStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoosterNFT> {
    return super.deploy(unminted_, overrides || {}) as Promise<BoosterNFT>;
  }
  override getDeployTransaction(
    unminted_: IBoosterNFT.KindStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(unminted_, overrides || {});
  }
  override attach(address: string): BoosterNFT {
    return super.attach(address) as BoosterNFT;
  }
  override connect(signer: Signer): BoosterNFT__factory {
    return super.connect(signer) as BoosterNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoosterNFTInterface {
    return new utils.Interface(_abi) as BoosterNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoosterNFT {
    return new Contract(address, _abi, signerOrProvider) as BoosterNFT;
  }
}
