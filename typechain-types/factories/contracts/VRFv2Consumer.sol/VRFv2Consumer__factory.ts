/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFv2Consumer,
  VRFv2ConsumerInterface,
} from "../../../contracts/VRFv2Consumer.sol/VRFv2Consumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "randomNum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_evotures",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_boosters",
        type: "uint8",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "evotures",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "boosters",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600580546001600160a01b031916736d80646beadd07ce68cab36c27c626790bbcf17f1790557f83d1b6e3388bed3d76426974512bb0d270e9542a765cd667242ea26c0cc0b730600655600780546401000186a065ffffffffffff1990911617905534801561007257600080fd5b506005546001600160a01b031660805233806100d45760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000604482015260640160405180910390fd5b600080546001600160a01b03199081166001600160a01b03938416179091553360a0526005546002805491909316911617905560805160a051610bdc610133600039600061078101526000818161021d015261025f0152610bdc6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063c58343ef11610066578063c58343ef14610176578063d8a4676f146101b9578063eb92db27146101e3578063f2fde38b146101f6578063fc2a88c31461020957600080fd5b80631fe543e3146100a35780638796ba8c146100b85780638da5cb5b146100de578063a168fa89146100f9578063bbcaf7e114610163575b600080fd5b6100b66100b1366004610904565b610212565b005b6100cb6100c63660046109ce565b61029f565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100d5565b6101386101073660046109ce565b60016020526000908152604090205460ff808216916101008104821691620100008204811691630100000090041684565b604080519415158552921515602085015260ff918216928401929092521660608201526080016100d5565b6100cb6101713660046109fd565b6102c0565b6101a26101843660046109ce565b60009081526001602052604090205460ff6101008204811692911690565b6040805192151583529015156020830152016100d5565b6101cc6101c73660046109ce565b6104c9565b6040805192151583526020830191909152016100d5565b6100b66101f1366004610a30565b6105f2565b6100b6610204366004610a61565b610628565b6100cb60045481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102915760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61029b82826106d3565b5050565b600381815481106102af57600080fd5b600091825260209091200154905081565b60006102ca610839565b60006102d68385610aa0565b6102e09085610ac9565b6002546006546007546040516305d3b1d360e41b81526004810192909252600160a01b830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff16606482015260ff831660848201529192506001600160a01b031690635d3b1d309060a4016020604051808303816000875af115801561036e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103929190610aee565b6040805160a08101825260008082526001602080840182815260ff8b81168688019081528b82166060880190815288518781528086018a52608089019081528a88528686529890962087518154945192519751841663010000000263ff000000199890941662010000029790971663ffff0000199215156101000261ff00199815159890981661ffff1990951694909417969096171691909117178355935180519597509294919361044a939185019291019061088e565b5050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018390555060048290556040805183815260ff831660208201527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a15092915050565b6000818152600160205260408120548190610100900460ff166105225760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606401610288565b6000838152600160208181526040808420815160a081018352815460ff8082161515835261010082048116151583870152620100008204811683860152630100000090910416606082015293810180548351818602810186019094528084529193608086019392908301828280156105b957602002820191906000526020600020905b8154815260200190600101908083116105a5575b5050505050815250509050806000015181608001516000815181106105e0576105e0610b07565b60200260200101519250925050915091565b6105fa610839565b6002805467ffffffffffffffff909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b610630610839565b336001600160a01b038216036106885760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610288565b600080546001600160a01b0319166001600160a01b0383169081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600082815260016020526040902054610100900460ff1661072a5760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606401610288565b6000828152600160208181526040909220805460ff19168217815583516107599391909201919084019061088e565b5060008281526001602052604090819020549051633460f4cd60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d183d334916107ca91859160ff620100008304811692630100000090041690600401610b58565b600060405180830381600087803b1580156107e457600080fd5b505af11580156107f8573d6000803e3d6000fd5b505050507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d828260405161082d929190610b85565b60405180910390a15050565b6000546001600160a01b0316331461088c5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610288565b565b8280548282559060005260206000209081019282156108c9579160200282015b828111156108c95782518255916020019190600101906108ae565b506108d59291506108d9565b5090565b5b808211156108d557600081556001016108da565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561091757600080fd5b8235915060208084013567ffffffffffffffff8082111561093757600080fd5b818601915086601f83011261094b57600080fd5b81358181111561095d5761095d6108ee565b8060051b604051601f19603f83011681018181108582111715610982576109826108ee565b6040529182528482019250838101850191898311156109a057600080fd5b938501935b828510156109be578435845293850193928501926109a5565b8096505050505050509250929050565b6000602082840312156109e057600080fd5b5035919050565b803560ff811681146109f857600080fd5b919050565b60008060408385031215610a1057600080fd5b610a19836109e7565b9150610a27602084016109e7565b90509250929050565b600060208284031215610a4257600080fd5b813567ffffffffffffffff81168114610a5a57600080fd5b9392505050565b600060208284031215610a7357600080fd5b81356001600160a01b0381168114610a5a57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168160ff0481118215151615610ac157610ac1610a8a565b029392505050565b600060ff821660ff84168060ff03821115610ae657610ae6610a8a565b019392505050565b600060208284031215610b0057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610b4d57815187529582019590820190600101610b31565b509495945050505050565b606081526000610b6b6060830186610b1d565b60ff94851660208401529290931660409091015292915050565b828152604060208201526000610b9e6040830184610b1d565b94935050505056fea264697066735822122015f6c4a1c946320c76da14503c84e21d3e9700f0d5e6a1271caa6e0a0e44857464736f6c634300080e0033";

type VRFv2ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFv2ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFv2Consumer__factory extends ContractFactory {
  constructor(...args: VRFv2ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFv2Consumer> {
    return super.deploy(overrides || {}) as Promise<VRFv2Consumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VRFv2Consumer {
    return super.attach(address) as VRFv2Consumer;
  }
  override connect(signer: Signer): VRFv2Consumer__factory {
    return super.connect(signer) as VRFv2Consumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFv2ConsumerInterface {
    return new utils.Interface(_abi) as VRFv2ConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFv2Consumer {
    return new Contract(address, _abi, signerOrProvider) as VRFv2Consumer;
  }
}
