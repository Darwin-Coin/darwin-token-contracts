/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFv2Consumer,
  VRFv2ConsumerInterface,
} from "../../../contracts/VRFv2Consumer.sol/VRFv2Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "uint16",
        name: "_confirmations",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "evoturesContract",
    outputs: [
      {
        internalType: "contract IEvoturesNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "randomNum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_evotures",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestConfirmations",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_evotures",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_boosters",
        type: "uint8",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "evotures",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "boosters",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610eaa380380610eaa83398101604081905261002f916100fe565b6001600160a01b038416608052338061008e5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000604482015260640160405180910390fd5b600080546001600160a01b039283166001600160a01b03199182161790915561ffff90921660a052600380546001600160401b03909416600160a01b02600160a01b600160e01b03199094169390931790925560c092909252600280549390911692909116919091179055610172565b6000806000806080858703121561011457600080fd5b84516001600160a01b038116811461012b57600080fd5b6020860151604087015191955093506001600160401b038116811461014f57600080fd5b606086015190925061ffff8116811461016757600080fd5b939692955090935050565b60805160a05160c051610cf56101b56000396000818160ee01526103aa0152600081816101ca01526103dd0152600081816102cc015261030e0152610cf56000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063bbcaf7e11161008c578063d4ac456d11610066578063d4ac456d14610268578063d8a4676f1461027b578063f2fde38b146102a5578063fc2a88c3146102b857600080fd5b8063bbcaf7e1146101ff578063c4d66de814610212578063c58343ef1461022557600080fd5b80631fe543e3146100d457806361728f39146100e95780638796ba8c146101235780638da5cb5b14610136578063a168fa891461015b578063b0fb162f146101c5575b600080fd5b6100e76100e23660046109f6565b6102c1565b005b6101107f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b610110610131366004610ac0565b61034e565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b61019a610169366004610ac0565b60016020526000908152604090205460ff808216916101008104821691620100008204811691630100000090041684565b604080519415158552921515602085015260ff9182169284019290925216606082015260800161011a565b6101ec7f000000000000000000000000000000000000000000000000000000000000000081565b60405161ffff909116815260200161011a565b61011061020d366004610aef565b61036f565b6100e7610220366004610b22565b6105e2565b610251610233366004610ac0565b60009081526001602052604090205460ff6101008204811692911690565b60408051921515835290151560208301520161011a565b600354610143906001600160a01b031681565b61028e610289366004610ac0565b61060c565b60408051921515835260208301919091520161011a565b6100e76102b3366004610b22565b610735565b61011060055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103405760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61034a82826107e0565b5050565b6004818154811061035e57600080fd5b600091825260209091200154905081565b600061037961092b565b60006103858385610b68565b61038f9085610b91565b6002546003549192506001600160a01b031690635d3b1d30907f000000000000000000000000000000000000000000000000000000000000000090600160a01b900467ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000061040b60ff8716614e20610bb6565b61041c9061ffff1662013880610be0565b6040516001600160e01b031960e087901b168152600481019490945267ffffffffffffffff909216602484015261ffff16604483015262ffffff16606482015260ff8416608482015260a4016020604051808303816000875af1158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab9190610c07565b6040805160a08101825260008082526001602080840182815260ff8b81168688019081528b82166060880190815288518781528086018a52608089019081528a88528686529890962087518154945192519751841663010000000263ff000000199890941662010000029790971663ffff0000199215156101000261ff00199815159890981661ffff199095169490941796909617169190911717835593518051959750929491936105639391850192910190610980565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018390555060058290556040805183815260ff831660208201527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a15092915050565b6105ea61092b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600160205260408120548190610100900460ff166106655760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606401610337565b6000838152600160208181526040808420815160a081018352815460ff8082161515835261010082048116151583870152620100008204811683860152630100000090910416606082015293810180548351818602810186019094528084529193608086019392908301828280156106fc57602002820191906000526020600020905b8154815260200190600101908083116106e8575b50505050508152505090508060000151816080015160008151811061072357610723610c20565b60200260200101519250925050915091565b61073d61092b565b336001600160a01b038216036107955760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610337565b600080546001600160a01b0319166001600160a01b0383169081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b600082815260016020526040902054610100900460ff166108375760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606401610337565b6000828152600160208181526040909220805460ff191682178155835161086693919092019190840190610980565b5060035460008381526001602052604090819020549051633460f4cd60e21b81526001600160a01b039092169163d183d334916108bc91859160ff62010000820481169263010000009092041690600401610c71565b600060405180830381600087803b1580156108d657600080fd5b505af11580156108ea573d6000803e3d6000fd5b505050507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d828260405161091f929190610c9e565b60405180910390a15050565b6000546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610337565b565b8280548282559060005260206000209081019282156109bb579160200282015b828111156109bb5782518255916020019190600101906109a0565b506109c79291506109cb565b5090565b5b808211156109c757600081556001016109cc565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a0957600080fd5b8235915060208084013567ffffffffffffffff80821115610a2957600080fd5b818601915086601f830112610a3d57600080fd5b813581811115610a4f57610a4f6109e0565b8060051b604051601f19603f83011681018181108582111715610a7457610a746109e0565b604052918252848201925083810185019189831115610a9257600080fd5b938501935b82851015610ab057843584529385019392850192610a97565b8096505050505050509250929050565b600060208284031215610ad257600080fd5b5035919050565b803560ff81168114610aea57600080fd5b919050565b60008060408385031215610b0257600080fd5b610b0b83610ad9565b9150610b1960208401610ad9565b90509250929050565b600060208284031215610b3457600080fd5b81356001600160a01b0381168114610b4b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168160ff0481118215151615610b8957610b89610b52565b029392505050565b600060ff821660ff84168060ff03821115610bae57610bae610b52565b019392505050565b600061ffff80831681851681830481118215151615610bd757610bd7610b52565b02949350505050565b600062ffffff808316818516808303821115610bfe57610bfe610b52565b01949350505050565b600060208284031215610c1957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610c6657815187529582019590820190600101610c4a565b509495945050505050565b606081526000610c846060830186610c36565b60ff94851660208401529290931660409091015292915050565b828152604060208201526000610cb76040830184610c36565b94935050505056fea2646970667358221220ce6d9a9e2193b80df81c092ed685a0f7be5ea023da7caf44866898a38329250b64736f6c634300080e0033";

type VRFv2ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFv2ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFv2Consumer__factory extends ContractFactory {
  constructor(...args: VRFv2ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _coordinator: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    subscriptionId: PromiseOrValue<BigNumberish>,
    _confirmations: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFv2Consumer> {
    return super.deploy(
      _coordinator,
      _keyHash,
      subscriptionId,
      _confirmations,
      overrides || {}
    ) as Promise<VRFv2Consumer>;
  }
  override getDeployTransaction(
    _coordinator: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    subscriptionId: PromiseOrValue<BigNumberish>,
    _confirmations: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _coordinator,
      _keyHash,
      subscriptionId,
      _confirmations,
      overrides || {}
    );
  }
  override attach(address: string): VRFv2Consumer {
    return super.attach(address) as VRFv2Consumer;
  }
  override connect(signer: Signer): VRFv2Consumer__factory {
    return super.connect(signer) as VRFv2Consumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFv2ConsumerInterface {
    return new utils.Interface(_abi) as VRFv2ConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFv2Consumer {
    return new Contract(address, _abi, signerOrProvider) as VRFv2Consumer;
  }
}
