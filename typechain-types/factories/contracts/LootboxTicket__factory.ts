/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LootboxTicket,
  LootboxTicketInterface,
} from "../../contracts/LootboxTicket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darwin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dev",
        type: "address",
      },
      {
        internalType: "address",
        name: "_darwin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
    ],
    name: "openLootBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604080518082018252600f81526e4c6f6f74626f78205469636b65747360881b6020808301918252835180850190945260078452665449434b45545360c81b90840152815191929162000068916000916200008b565b5080516200007e9060019060208401906200008b565b505033608052506200016d565b828054620000999062000131565b90600052602060002090601f016020900481019282620000bd576000855562000108565b82601f10620000d857805160ff191683800117855562000108565b8280016001018555821562000108579182015b8281111562000108578251825591602001919060010190620000eb565b50620001169291506200011a565b5090565b5b808211156200011657600081556001016200011b565b600181811c908216806200014657607f821691505b6020821081036200016757634e487b7160e01b600052602260045260246000fd5b50919050565b608051611c54620001976000396000818161022901528181610591015261074e0152611c546000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80635e9313d3116100ad57806395d89b411161007157806395d89b4114610297578063a22cb4651461029f578063b88d4fde146102b2578063c87b56dd146102c5578063e985e9c5146102d857600080fd5b80635e9313d3146102245780636352211e1461024b5780636a6278421461025e57806370a082311461027157806391cca3db1461028457600080fd5b80633110c792116100f45780633110c792146101c1578063366deaf4146101d457806342842e0e146101eb578063485cc955146101fe57806355a02c2d1461021157600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806323b872dd146101ae575b600080fd5b61014461013f3660046116f1565b610314565b60405190151581526020015b60405180910390f35b610161610366565b6040516101509190611766565b61018161017c366004611779565b6103f8565b6040516001600160a01b039091168152602001610150565b6101ac6101a73660046117ae565b61041f565b005b6101ac6101bc3660046117d8565b610539565b600654610181906001600160a01b031681565b6101dd60085481565b604051908152602001610150565b6101ac6101f93660046117d8565b61056b565b6101ac61020c366004611814565b610586565b6101ac61021f366004611779565b61071d565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b610181610259366004611779565b610839565b6101ac61026c366004611847565b610899565b6101dd61027f366004611847565b610917565b600754610181906001600160a01b031681565b61016161099d565b6101ac6102ad366004611870565b6109ac565b6101ac6102c03660046118bd565b6109bb565b6101616102d3366004611779565b6109f3565b6101446102e6366004611814565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061034557506001600160e01b03198216635b5e139f60e01b145b8061036057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461037590611999565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190611999565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b600061040382610a67565b506000908152600460205260409020546001600160a01b031690565b600061042a82610839565b9050806001600160a01b0316836001600160a01b03160361049c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104b857506104b881336102e6565b61052a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610493565b6105348383610ac9565b505050565b610544335b82610b37565b6105605760405162461bcd60e51b8152600401610493906119d3565b610534838383610bb6565b610534838383604051806020016040528060008152506109bb565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461060a5760405162461bcd60e51b8152602060048201526024808201527f4c6f6f74626f785469636b65743a2043414c4c45525f4e4f545f4d554c5449506044820152632624a2a960e11b6064820152608401610493565b6007546001600160a01b031615801561062c57506006546001600160a01b0316155b6106835760405162461bcd60e51b815260206004820152602260248201527f4c6f6f74626f785469636b65743a20414c52454144595f494e495449414c495a604482015261115160f21b6064820152608401610493565b6001600160a01b038216158015906106a357506001600160a01b03811615155b6106ef5760405162461bcd60e51b815260206004820152601b60248201527f4c6f6f74626f785469636b65743a205a45524f5f4144445245535300000000006044820152606401610493565b600780546001600160a01b039384166001600160a01b03199182161790915560068054929093169116179055565b600080610728610d1a565b9250905080156107b3576040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050505b81156108305760065460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e9190611a20565b505b61053483610f36565b6000818152600260205260408120546001600160a01b0316806103605760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610493565b6007546001600160a01b031633146108f35760405162461bcd60e51b815260206004820181905260248201527f4c6f6f74626f785469636b65743a2043414c4c45525f49535f4e4f545f4445566044820152606401610493565b6108ff81600854610fa3565b6008805490600061090f83611a53565b919050555050565b60006001600160a01b0382166109815760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610493565b506001600160a01b031660009081526003602052604090205490565b60606001805461037590611999565b6109b7338383610fbd565b5050565b6109c53383610b37565b6109e15760405162461bcd60e51b8152600401610493906119d3565b6109ed8484848461108b565b50505050565b60606109fe82610a67565b6000610a1560408051602081019091526000815290565b90506000815111610a355760405180602001604052806000815250610a60565b80610a3f846110be565b604051602001610a50929190611a6c565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b0316610ac65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610493565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610afe82610839565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b4383610839565b9050806001600160a01b0316846001600160a01b03161480610b8a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bae5750836001600160a01b0316610ba3846103f8565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bc982610839565b6001600160a01b031614610bef5760405162461bcd60e51b815260040161049390611a9b565b6001600160a01b038216610c515760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610493565b826001600160a01b0316610c6482610839565b6001600160a01b031614610c8a5760405162461bcd60e51b815260040161049390611a9b565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000806000610d27611151565b90506019811015610d3d57620186a09150509091565b604b811015610d515762015f909150509091565b6096811015610d6557620138809150509091565b610190811015610d7a57620111709150509091565b610384811015610d8e5761ea609150509091565b610672811015610da25761c3509150509091565b611036811015610db657619c409150509091565b6123be811015610dca576175309150509091565b61410a811015610dde57614e209150509091565b6201a09a811015610e18576000610df6600983611af6565b9050610e04816103e8611b0a565b610e10906107d0611b29565b925050509091565b6223f5aa811015610e48576000610e30605a83611af6565b9050610e3d81600a611b0a565b610e1090606e611b29565b6237087a811015610e6d576000610e60601983611af6565b9050610e1081604c611b29565b624c0392811015610e92576000610e85601983611af6565b9050610e10816033611b29565b6262e6f2811015610eb7576000610eaa601983611af6565b9050610e1081601a611b29565b627f832a811015610edc576000610ecf601983611af6565b9050610e10816001611b29565b627f8334811015610ef1576101f49250509091565b627f8398811015610f055760649250509091565b627f8780811015610f195760329250509091565b62818ff8811015610f2d5760199250509091565b600a9250509091565b610f3f3361053e565b610f9a5760405162461bcd60e51b815260206004820152602660248201527f4c6f6f74626f785469636b65743a2043414c4c45525f4e4f545f5449434b45546044820152652fa7aba722a960d11b6064820152608401610493565b610ac6816112af565b6109b7828260405180602001604052806000815250611344565b816001600160a01b0316836001600160a01b03160361101e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610493565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611096848484610bb6565b6110a284848484611377565b6109ed5760405162461bcd60e51b815260040161049390611b41565b606060006110cb83611478565b600101905060008167ffffffffffffffff8111156110eb576110eb6118a7565b6040519080825280601f01601f191660200182016040528015611115576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461111f57509392505050565b60008042336040516020016111669190611b93565b6040516020818303038152906040528051906020012060001c6111899190611bb0565b423060405160200161119b9190611b93565b6040516020818303038152906040528051906020012060001c6111be9190611bb0565b4342326040516020016111d19190611b93565b6040516020818303038152906040528051906020012060001c6111f49190611bb0565b4542416040516020016112079190611b93565b6040516020818303038152906040528051906020012060001c61122a9190611bb0565b6112344442611b29565b61123e9190611b29565b6112489190611b29565b6112529190611b29565b61125c9190611b29565b6112669190611b29565b6112709190611b29565b60405160200161128291815260200190565b60408051601f19818403018152919052805160209091012090506112a96298968082611af6565b91505090565b60006112ba82610839565b90506112c582610839565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b61134e8383611550565b61135b6000848484611377565b6105345760405162461bcd60e51b815260040161049390611b41565b60006001600160a01b0384163b1561146d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113bb903390899088908890600401611bc4565b6020604051808303816000875af19250505080156113f6575060408051601f3d908101601f191682019092526113f391810190611c01565b60015b611453573d808015611424576040519150601f19603f3d011682016040523d82523d6000602084013e611429565b606091505b50805160000361144b5760405162461bcd60e51b815260040161049390611b41565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bae565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114b75772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106114e3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061150157662386f26fc10000830492506010015b6305f5e1008310611519576305f5e100830492506008015b612710831061152d57612710830492506004015b6064831061153f576064830492506002015b600a83106103605760010192915050565b6001600160a01b0382166115a65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610493565b6000818152600260205260409020546001600160a01b03161561160b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610493565b6000818152600260205260409020546001600160a01b0316156116705760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610493565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610ac657600080fd5b60006020828403121561170357600080fd5b8135610a60816116db565b60005b83811015611729578181015183820152602001611711565b838111156109ed5750506000910152565b6000815180845261175281602086016020860161170e565b601f01601f19169290920160200192915050565b602081526000610a60602083018461173a565b60006020828403121561178b57600080fd5b5035919050565b80356001600160a01b03811681146117a957600080fd5b919050565b600080604083850312156117c157600080fd5b6117ca83611792565b946020939093013593505050565b6000806000606084860312156117ed57600080fd5b6117f684611792565b925061180460208501611792565b9150604084013590509250925092565b6000806040838503121561182757600080fd5b61183083611792565b915061183e60208401611792565b90509250929050565b60006020828403121561185957600080fd5b610a6082611792565b8015158114610ac657600080fd5b6000806040838503121561188357600080fd5b61188c83611792565b9150602083013561189c81611862565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118d357600080fd5b6118dc85611792565b93506118ea60208601611792565b925060408501359150606085013567ffffffffffffffff8082111561190e57600080fd5b818701915087601f83011261192257600080fd5b813581811115611934576119346118a7565b604051601f8201601f19908116603f0116810190838211818310171561195c5761195c6118a7565b816040528281528a602084870101111561197557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600181811c908216806119ad57607f821691505b6020821081036119cd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060208284031215611a3257600080fd5b8151610a6081611862565b634e487b7160e01b600052601160045260246000fd5b600060018201611a6557611a65611a3d565b5060010190565b60008351611a7e81846020880161170e565b835190830190611a9281836020880161170e565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611b0557611b05611ae0565b500690565b6000816000190483118215151615611b2457611b24611a3d565b500290565b60008219821115611b3c57611b3c611a3d565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60609190911b6bffffffffffffffffffffffff1916815260140190565b600082611bbf57611bbf611ae0565b500490565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bf79083018461173a565b9695505050505050565b600060208284031215611c1357600080fd5b8151610a60816116db56fea2646970667358221220d659c6d6185eacbd099d9dea27b3f61c300893bcf4466090f529b341b99bb27364736f6c634300080e0033";

type LootboxTicketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootboxTicketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LootboxTicket__factory extends ContractFactory {
  constructor(...args: LootboxTicketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LootboxTicket> {
    return super.deploy(overrides || {}) as Promise<LootboxTicket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LootboxTicket {
    return super.attach(address) as LootboxTicket;
  }
  override connect(signer: Signer): LootboxTicket__factory {
    return super.connect(signer) as LootboxTicket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootboxTicketInterface {
    return new utils.Interface(_abi) as LootboxTicketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LootboxTicket {
    return new Contract(address, _abi, signerOrProvider) as LootboxTicket;
  }
}
